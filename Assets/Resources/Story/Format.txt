/*
* for textbox dialogue
* makes character enter with "enter" keyword
* "as" changes what name the player sees
* [] changes body and emotion of character
* "at" changes at which position the dialogue appears - left or right (optional; no indication means it's in the main textbox)
* can indicate commands after the dialogue
*/
enter CharacterName as Alias [0:BodyFilename,1:EmotionFilename] at 0/1 "Dialogue" Commands()

/*
* for pixel dialogue
*/
pixel CharacterName as Alias "Dialogue"

/*
* can indicate commands as standalone
* [input] to wait for input before going to next line
* [wait] to wait for 0.3 seconds before going to next line
*/
[input/wait]Commands()

/*
* tags will replace the dialogue
*/
<playerName>
<subjectPronoun> //she/he/they
<objectPronoun> //her/him/them
<possessivePronoun> //her/his/their

/*
* shows input field
*/
input //shows input field

/*
* shows choice in left (0), right (1), or main (-1) textbox
*/
choice in 0/1/-1
{
	- Choice 1
		//place stuff here
	- Choice 2
		//place stuff here
}

/*
* conditions
* uses <, >, and ==
*/

if (condition)
{
	//if condition
}
else
{
	//else condition
}

/*
* stores variable, can be used for condition
* can be int, string, bool
*/
$Variable = SomeValue

===== COMMANDS LIST ====
=== Dialogue ===
HideTextbox(true/false) //hides textbox immediately or fade out

=== Characters ===
ShowCharacterLeft(CharacterName -e EmotionFilename -b BodyFilename) //makes the character move to the left side of screen from outside
ShowCharacterRight(CharacterName -e EmotionFilename -b BodyFilename) //makes the character move to the right side of screen from outside
SwitchCharacter(CurrentCharacter NewCharacter -p 0/1 -e EmotionFilename -b BodyFilename) //fades out current character in certain position and fades in character in that position
ChangeBodyEmotion(CurrentCharacter -e EmotionFilename -b BodyFilename) //changes body and emotion of character on screen
HideCharacter(CurrentCharacter) //moves character either on left or right outside screen depending where they are

=== Audio ===
playSFX(filename) //plays sound effects
playMusic(filename) //plays music audio event
playAmbience(filename) //plays ambience audio event
stopEvent(filename) //stops audio event
pauseEvent(filename) //pauses audio event with fadeout
resumeEvent(filename) //resumes audio event with fadeout

=== CG ===
ShowCG("CG Filename") //fades in CG
SwitchCG("CG Filename") //fades in new CG even when other CG is still on top
HideCG() //fades out current CG
Blackout() //adds blackout image on top of screen

=== Scene ===
ShowScene("Scene Name" "Background Prefab Name") //shows pixel background immediately, ALWAYS do this behind black screen 
SwitchScene("Scene Name" "Background Prefab Name") //for same background but different NPC configurations
ToggleInteractable("Scene Name" "Background Name" InteractableName true/false) //changes isInteractable on/off
ChangeAnimationState("Interactable/NPC Name" BoolName true/false) //triggers animation for interactable/NPC
RemoveFromScene("Interactable/NPC Name") //removes interactable/NPC from screen
MoveNPC(NPCName/Ahlai -x xPosition -y yPosition -spd speed) //moves NPC to target local position
MovePlayerToInteract(-x xPosition -y yPosition)
PanCamera(-x xPosition -y yPosition -spd speed)
ResetCamera(true/false) //smooth or not
RemoveScene()
SetCameraFollow("NPC Name")
FlipNPC("NPC Name/Ahlai" "Left/Right")
ToggleNPC("Scene Name" "Background Name" NPCName true/false) //changes appear to true/false
SetNPCPosition("NPC Name" -x xPosition -y yPosition)
FollowPlayer("NPC Name That Will Follow Player")
SetCamera(-x xPosition -y yPosition)
FreezePlayer(true/false)
ChangeSaturation(number)
ChangeLighting(number)
StartCombat("Combat Name" -x xPosition -y yPosition)
ShowNPC(NPCName/Ahlai true/false)

=== Effects ===
ScreenShake()

=== General ===
Wait(Time) //waits for Time seconds before continuing

